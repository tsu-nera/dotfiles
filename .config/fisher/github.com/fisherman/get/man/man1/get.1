.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GET" "1" "February 2016" "" "get"
.
.SH "NAME"
\fBget\fR \- Press Any Key to Continue
.
.SH "SYNOPSIS"
\fBget\fR [[\fB\-\-prompt\fR=]\fImsg\fR] [\fB\-\-rule\fR=\fIregex\fR] [\fB\-\-error\fR=\fImsg\fR] [\fB\-\-silent\fR[=\fInum\fR]]
.
.br
\fBget\fR [\fB\-\-quiet\fR] [\fB\-\-no\-\-case\fR] [\fB\-\-no\-cursor\fR] [\fB\-\-help\fR]
.
.br
.
.SH "DESCRIPTION"
\fBGet\fR is an interactive prompt reader for fish \fIhttps://github\.com/fish\-shell/fish\-shell\fR\. Use with read(1) \fIhttp://fishshell\.com/docs/current/commands\.html#read\fR to validate and store user input such as passwords and other data into variables\.
.
.SH "Options"
.
.TP
\-p, \-\-prompt=\fImsg\fR
Set the prompt message\.
.
.TP
\-r, \-\-rule=\fIregex\fR
Use the Regular Expression \fIregex\fR to validate the input\. This creates an infinite read loop until the input matches \fIregex\fR\.
.
.TP
\-e, \-\-error=\fImsg\fR
Set the error message\. \fImsg\fR is a printf(1) \fIhttp://linux\.die\.net/man/1/printf\fR format string\. Use the first positional %s to display the read input\.
.
.TP
\-s, \-\-silent[=\fInumber\fR]
Hide the user input as it is being typed\. Use this option to handle passwords or other sensitive data\. Optionally, indicate a \fInumber\fR to read up to a certain number of characters instead of a new line by default\.
.
.TP
\-d, \-\-default[=\fIstr\fR]
Use default value if none is selected\.
.
.
.TP
\-q, \-\-quiet
Suppress standard output\.
.
.TP
\-\-no\-case
Ignore case during validation\.
.
.TP
\-\-no\-cursor
Hide cursor\.
.
.TP
\-h, \-\-help
Show usage help\.
.
.SH "Usage"
\fBGet\fR prints the user input to standard output by default\.
.
.IP "" 4
.
.nf

get
.
.fi
.
.IP "" 0
.
.P
Use \-\-prompt=\fImsg\fR to display a prompt\.
.
.IP "" 4
.
.nf

get \-\-prompt "What\'s your name?\en\-> "
.
.fi
.
.IP "" 0
.
.P
Use \-\-rule=\fIregex\fR to validate the user input\.
.
.IP "" 4
.
.nf

get \-\-prompt="Enter a number:" \-\-rule="[0\-9]"
.
.fi
.
.IP "" 0
.
.P
Use \-\-error=\fImsg\fR to display an error message when \-\-rule=\fIregex\fR fails\. The error message can be printf(1) \fIhttp://linux\.die\.net/man/1/printf\fR format string and the user input can be displayed using \fI%s\fR\.
.
.IP "" 4
.
.nf

get \-\-prompt="Enter a number:" \-\-rule="[0\-9]" \-\-error="\'%s\' is not a valid number\."
.
.fi
.
.IP "" 0
.
.P
Use \-\-silent to hide the user input and read a password into a variable\.
.
.IP "" 4
.
.nf

get \-\-prompt="Enter your password:" \-\-silent
.
.fi
.
.IP "" 0
.
.P
Using \-\-silent in combination with \-\-rule and \-\-error will hide the input from the error message using a star character \fB*\fR\.
.
.IP "" 4
.
.nf

get \-\-prompt="Enter your password:" \-\-rule="[0\-9]" \-\-error="Invalid password \'%s\'" \-\-silent
.
.fi
.
.IP "" 0
.
.P
Use \-\-no\-cursor to hide the cursor and \-\-silent=\fInumber\fR to read up to \fInumber\fR of characters too\.
.
.P
Use \-\-quiet to suppress writing the read input to standard output\.
.
.IP "" 4
.
.nf

get \-\-prompt="Press any key to continue\.\.\." \-\-no\-cursor \-\-silent=1
.
.fi
.
.IP "" 0
.
.SH "SEE ALSO"
.
.IP "\(bu" 4
read(1)
.
.IP "" 0
